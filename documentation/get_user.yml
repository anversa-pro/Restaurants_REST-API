Return user info stored in the database
---
tags:
- name: Users
description: A JSON request info of a user
consumes:
  - application/json
produces:
  - application/json
parameters:
  - in: header
    name: Authorization
    type: string
    required: true
    description: Access token
  - in: body
    name: body
    description: User to return
    required: true
    schema:
      type: object
      required:
        - name
        - email
        - password
      properties:
        username:
          type: string
        email:
          type: string
        user_id:
          type: string
          format: password
      example:
        {username: Agust√≠n , email: agus@tester.com, user_id: 4}
security:
- jwtAuth: []
responses:
  202:
    description: Successful operation
  400:
    description: Missing or invalid parameters
  401:
    description: Unauthorized
  500:
    description: Server error

securityDefinitions:
  jwtAuth:
    type: oauth2
    flow: implicit
    scopes:
      write:restaurants: modify restaurants in your account
      read:restaurants: read public restaurants and in your account